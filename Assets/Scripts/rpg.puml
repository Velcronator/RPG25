@startuml RPG
namespace RPG.Combat {
    class Fighter {
        -float weaponRange
        -float timeBetweenAttacks
        -float weaponDamage
        -Health target
        -float timeSinceLastAttack
        +void Update()
        +void Attack(CombatTarget combatTarget)
        +void Cancel()
        -void AttackBehaviour()
        -void Hit() // Animation Event
        -bool GetIsInRange()
    }

    class Health {
        -float healthPoints
        -bool isDead
        +bool IsDead()
        +void TakeDamage(float damage)
        -void Die()
    }

    class CombatTarget {
    }

    Fighter --> Health : targets
    Fighter --> CombatTarget : interacts
}

  namespace RPG.Control {
      class PlayerController {
          +void Update()
          -bool InteractWithCombat()
          -bool InteractWithMovement()
          -static Ray GetMouseRay()
      }
      PlayerController --> Fighter : uses
      PlayerController --> Mover : uses
      PlayerController --> CombatTarget : interacts
  }

  namespace RPG.Core {
      interface IAction {
          +void Cancel()
      }
      class ActionScheduler {
          -IAction currentAction
          +void StartAction(IAction action)
      }
      class FollowCamera {
          -Transform target
          +void LateUpdate()
      }
      Fighter ..|> IAction
      Fighter --> ActionScheduler : uses
  }

  namespace RPG.Movement {
      class Mover {
          +void MoveTo(Vector3 position)
          +void Cancel()
          +void StartMoveAction(Vector3 destination)
      }
      Fighter --> Mover : uses
      PlayerController --> Mover : uses
  }
  @enduml